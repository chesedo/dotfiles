(defwindow information
           :monitor 1
           :geometry (geometry :x "-32px"
                               :y "32px"
                               :width "570px"
                               :height "782px"
                               :anchor "top right")
           :stacking "fg"
           :reserve (struts :distance "40px" :side "right")
           :windowtype "desktop"
           :wm-ignore false
  (box :orientation "vertical"
    (box :halign "center" :valign "end" (time))
    (box :halign "start" :valign "start" (resources))
    (box :halign "center" :valign "start" (power))
    )
)

(deflisten minutes `scripts/minutes.sh`)
(deflisten hours `scripts/hours.sh`)
(deflisten batteries `scripts/batteries.sh`)

(defwidget time []
  (item
    (label :text hours :class "hours" :valign "start")
    (label :text minutes :class "minutes" :valign "end")))

(defwidget power []
  (item
   (box :orientation "vertical"
    (for battery in batteries
        (list-item :icon "${battery.type_icon}" :text "${battery.model}" :percent "${battery.percentage}" :state "${battery.state}" :tooltip "${battery.updated} | ${battery.time_to_empty}h"))
    )
   )
)

(defwidget item []
  (box :orientation "horizontal"
       :halign "center"
       :valign "center"
       :class "item"
       :space-evenly false
    (children)))

(defwidget list-item [icon text percent state tooltip]
  (box :orientation "horizontal"
       :halign "fill"
       :space-evenly false
       :spacing 12
       :class "list-item"
       :tooltip tooltip
    (label :text icon :class "icon")
    (label :text text :hexpand true :halign "start")
    (label :text {state == "charging" ? "ó°‚„" : ""})
    (label :text "${percent}%")
))

(defwidget resources []
  (item
   (box :orientation "vertical"
        (resource-graph :title "CPU" :current "${round(EWW_CPU.avg, 1)}%" :value "${EWW_CPU.avg}" :min 0 :max 100)
        (resource-graph :title "RAM" :current "${round(EWW_RAM.used_mem / 1024 / 1024 / 1024, 2)} Gb" :value "${EWW_RAM.used_mem_perc}" :min 0 :max 100)
        (resource-graph :title "DOWN" :current "${round(EWW_NET.wlp1s0.NET_DOWN / 1024 / 1024 / 2, 1)} Mb" :value "${EWW_NET.wlp1s0.NET_DOWN}" :min 0 :max 1048576)
        (resource-graph :title "UP" :current "${round(EWW_NET.wlp1s0.NET_UP / 1024 / 1024 / 2, 1)} Mb" :value "${EWW_NET.wlp1s0.NET_UP}" :min 0 :max 1048576))))

(defwidget resource-graph [title current value min max]
  (box :space-evenly false
       :halign "end"
       :class "resource-graph"
       :spacing 12
       (box :orientation "vertical" :valign "center" :space-evenly false
        (label :text title :xalign 1)
        (label :text current))
       (graph :value value
              :min min
              :max max
              :width 150
              :height 50
              :time-range "60s"
              :dynamic false)))
