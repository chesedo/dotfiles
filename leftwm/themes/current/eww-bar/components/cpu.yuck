(defwidget cpu []
  (eventbox :onhover "eww open cpus"
            :onhoverlost "eww close cpus"
    (button :onclick "alacritty --command htop &"
      (circular-progress :value "${EWW_CPU.avg}"
                         :thickness 3
                         :start-at 75
                         :class {"${EWW_CPU.avg}" > 90 ? "donut high" : "donut"}
        "${round(EWW_CPU.avg, 0)}"
      )
    )
  )
)

(defwindow cpus
  :monitor 1
  :geometry (geometry :x "-120px"
                      :y "22px"
                      :anchor "top right")
  (box :class "popout"
    (box :space-evenly true :orientation "v"
      (core :name 0 :freq "${EWW_CPU.cores[0].freq}" :usage "${EWW_CPU.cores[0].usage}")
      (core :name 1 :freq "${EWW_CPU.cores[1].freq}" :usage "${EWW_CPU.cores[1].usage}")
      (core :name 2 :freq "${EWW_CPU.cores[2].freq}" :usage "${EWW_CPU.cores[2].usage}")
      (core :name 3 :freq "${EWW_CPU.cores[3].freq}" :usage "${EWW_CPU.cores[3].usage}")
      (core :name 4 :freq "${EWW_CPU.cores[4].freq}" :usage "${EWW_CPU.cores[4].usage}")
      (core :name 5 :freq "${EWW_CPU.cores[5].freq}" :usage "${EWW_CPU.cores[5].usage}")
      (core :name 6 :freq "${EWW_CPU.cores[6].freq}" :usage "${EWW_CPU.cores[6].usage}")
      (core :name 7 :freq "${EWW_CPU.cores[7].freq}" :usage "${EWW_CPU.cores[7].usage}")
      (core :name 8 :freq "${EWW_CPU.cores[8].freq}" :usage "${EWW_CPU.cores[8].usage}")
      (core :name 9 :freq "${EWW_CPU.cores[9].freq}" :usage "${EWW_CPU.cores[9].usage}")
      (core :name 10 :freq "${EWW_CPU.cores[10].freq}" :usage "${EWW_CPU.cores[10].usage}")
      (core :name 11 :freq "${EWW_CPU.cores[11].freq}" :usage "${EWW_CPU.cores[11].usage}")
      (core :name 12 :freq "${EWW_CPU.cores[12].freq}" :usage "${EWW_CPU.cores[12].usage}")
      (core :name 13 :freq "${EWW_CPU.cores[13].freq}" :usage "${EWW_CPU.cores[13].usage}")
      (core :name 14 :freq "${EWW_CPU.cores[14].freq}" :usage "${EWW_CPU.cores[14].usage}")
      (core :name 15 :freq "${EWW_CPU.cores[15].freq}" :usage "${EWW_CPU.cores[15].usage}")
    )
  )
)

(defwidget core [name freq usage]
  (box :class "core"
    (label :text "${name} @ ${freq}Hz")
    (box :class {"${usage}" > 80 ? "series high" : "series"}
    (graph :value "${usage}" :thickness 2 :time-range "60s" :max 100 :width 120 :height 40)
    )
  )
)
